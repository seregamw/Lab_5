unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DB, ADODB, StdCtrls, Grids, DBGrids, DBTables;

type
  TForm1 = class(TForm)
    ADOConnection1: TADOConnection;
    ADOQuery1: TADOQuery;
    DataSource1: TDataSource;
    DBGrid1: TDBGrid;
    ListBox1: TListBox;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    Edit1: TEdit;
    Edit2: TEdit;
    Edit3: TEdit;
    Edit4: TEdit;
    Memo1: TMemo;
    Button5: TButton;

    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure DBGrid1CellClick(Column: TColumn);
    procedure ListBox1MouseUp(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Button5Click(Sender: TObject);
    { procedure DBGrid1MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer); }
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

  type
  TCrackDBGrid = class(TCustomDBGrid)
  end;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
begin
   try
    if (Trim(Edit1.Text)='') or (Trim(Edit2.Text)='') then
     begin
      exit;
     end;
    ADOQuery1.Insert;
    ADOQuery1.FieldByName('fio').AsString:=Edit1.Text;
    ADOQuery1.FieldByName('rate').AsInteger:=StrToInt(Edit2.Text);
    Edit1.Clear;
    Edit2.Clear;
   except
    on e:Exception do
   end;
end;

procedure TForm1.Button2Click(Sender: TObject);
begin
   try
    if Application.MessageBox('Delete?','ADO',MB_YESNO)=IDYES then
     begin
      ADOQuery1.Delete;
     end;
   except
    on e:Exception do
   end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
 TDrawGrid(DBGrid1).ScrollBars:=ssNone;
 EnableScrollBar(DBGrid1.Handle,SB_BOTH,ESB_DISABLE_BOTH);
   try
    //ADOQuery1.SQL.Clear;
    //ADOQuery1.SQL.Add('SELECT * FROM Student');
   // ADOQuery1.Active:=True;
    ADOConnection1.GetTableNames(ListBox1.Items);
    //ADOConnection1.GetFieldNames('Student',ListBox1.Items);
    ListBox1.Selected[0]:= True;

   except
    on e:Exception do
   end;
end;

procedure TForm1.ListBox1MouseUp(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);

  var
  Point : TPoint;
  Nomer : Integer;
  s:string;

  a:string;
  i,count:integer;
begin
  Point.X := X;
  Point.Y := Y;
  Nomer := ListBox1.ItemAtPos(Point, True);
  //edit2.text := IntToStr(Nomer);
  s:=ListBox1.Items[Nomer];

  begin
   try
    ADOQuery1.SQL.Clear;
    ADOQuery1.SQL.Add('SELECT * FROM '+s);
    ADOQuery1.Active:=True;
   except
    on e:Exception do
   end;


    i:=0;
    count:=DBGrid1.Columns.Count;

    while i<count do
    begin
    DBGrid1.Columns[i].Width:=60;

    i:=i+1;
    end;
  end;

end;

procedure TForm1.Button4Click(Sender: TObject);
begin
   ADOQuery1.Refresh;
end;

procedure TForm1.Button5Click(Sender: TObject);
begin
   try
    ADOQuery1.SQL.Clear;
    ADOQuery1.SQL.Add(memo1.Lines.Text);
    ADOQuery1.Active:=True;
   except
    on e:Exception do
    ShowMessage('Неправильно введений запрос');
   end;
end;

procedure TForm1.Button3Click(Sender: TObject);
begin
   try
    ADOQuery1.Edit;
    ADOQuery1.FieldByName('fio').AsString:=Edit1.Text;
    ADOQuery1.FieldByName('rate').AsInteger:=StrToInt(Edit2.Text);
   except
    on e:Exception do
   end;
end;

//********************************************************************

procedure TForm1.DBGrid1CellClick(Column: TColumn);
var
  i,n,count,q:integer;
  a:string;
begin
   count := DBGrid1.Columns.Count;
   n := count;

   for i := 0 to Form1.ComponentCount-1 do
     if Form1.Components[i] is TEdit
      then
        begin
           if n = 1 then
              break
           else
             begin
                TEdit(Form1.Components[i]).Text := ADOQuery1.FieldByName(dbgrid1.Columns[count-n].Title.caption).AsString;
                dec(n);
             end;
        end;
end;

//********************************************************************

{ procedure TForm1.DBGrid1MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
var
grCoord: TGridCoord;
aGrid: TCrackDBGrid;
oldActiveRecord: integer;
delta: integer;
begin
 aGrid := TCrackDBGrid(Sender);
 grCoord := aGrid.MouseCoord(X, Y);
 aGrid.DataSource.DataSet.DisableControls;
 oldActiveRecord := aGrid.DataLink.ActiveRecord;
 delta := grCoord.Y - aGrid.DataLink.ActiveRecord - 1;
 aGrid.DataLink.DataSet.MoveBy(delta);
 if grCoord.X > 0 then
   caption := format( 'строка: %d, столбец: %d, delta: %d, текст: %s',
             [grCoord.Y, grCoord.X, delta, aGrid.Columns[grCoord.X-1].Field.DisplayText]);
 aGrid.DataLink.ActiveRecord := oldActiveRecord;
 aGrid.DataSource.DataSet.EnableControls;
 //ShowMessage(inttostr(grCoord.Y));
 end; }

end.
